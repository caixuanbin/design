享元模块
--场景：内存属于稀缺资源，不要随便浪费。如果有很多个完全相同或相似的对象，我们可以通过享元模块，节省内存。
--核心：
    --享元模式以共享的方式高效的支持大量细粒度对象的重用。
    --享元对象能做到共享的关键是区分了内部状态和外部状态。
        --内部状态：可以共享，不会随着环境变化而变化；
        --外部状态：不可以共享，会随着环境变化而变化；

享元模式实现：
--FlyWeightFactory享元工厂类
    --创建并管理享元对象，享元池一般设计成键值对
--FlyWeight抽象享元类
    --通常是一个接口或抽象类，声明公共方法，这些方法可以向外界提供对象的内部状态，設置外部的状态。
--ConcreteFlayWeight具体享元类
    --为内部状态提供成员变量进行存储
--UnsharedConcreteFlyWeighth非共享享元类
    --不能被共享的子类可以设计成非共享享元类